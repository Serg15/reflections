Question 1. How did viewing a diff between two versions of a file help 
you see the bug that was introduced?

It helps you because in this manner you only see the parts which have
been changed and where the bugs can be localated since the "old"
version worked properly. 

Question 2. How could having easy access to the entire history of a 
file make you a more efficient programmer in the long term?

It helps you because you can see what have you changed if your program
starts to work slower.

Question 3. What do you think are the pros and cons of manually choosing
when to create a commit, like yo dou in Git, vs having versions automatically
saved, like Google Docs does?

Pros: You save the commit only when necessary and you can chose when a change
seems to be important
Cons: You can forget to make commitments sometimes or something you think it 
is not important can be important. 

Question 4. Why do you think some version control systems, like Git, allow
saving multiples files in one commit, while others, like Google Docs, treat
each file separately?

Because in google Docs it is not suposed to have different files
related.

Question 5. How can you use the commands git log and git diff to view
the history of files?

Taking the IDs of the different commits and comparing them.

Question 6. How might using version control make you more confident to make
changes that could break something?

Knowing that if you break something you can always go back to a previous 
version.

Question 7. Now that you have your workspace set up, what do you want to 
try using Git for?

For recovering previous versions and locating errors 
